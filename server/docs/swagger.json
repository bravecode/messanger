{
    "swagger": "2.0",
    "info": {
        "description": "Learning GO (with Fiber) by creating messanger copy.",
        "title": "Messanger API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Access your account",
                "parameters": [
                    {
                        "description": "Login Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Fetch info about signed in user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create new account",
                "parameters": [
                    {
                        "description": "Register Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RegisterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/conversations/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversations"
                ],
                "summary": "Get all messages for specified conversation.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Relationship ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ConversationMessage"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/relationship": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relationship"
                ],
                "summary": "Get all relationships for signed in user.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.RelationshipResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relationship"
                ],
                "summary": "Sends friend request to specified user.",
                "parameters": [
                    {
                        "description": "Invite Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RelationshipInviteDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.RelationshipResponseItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/relationship/{id}/accept": {
            "get": {
                "tags": [
                    "Relationship"
                ],
                "summary": "Accept friend request.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Relationship ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/relationship/{id}/decline": {
            "get": {
                "tags": [
                    "Relationship"
                ],
                "summary": "Decline friend request.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Relationship ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Search for users with specified username.",
                "parameters": [
                    {
                        "minLength": 3,
                        "type": "string",
                        "description": "Username query value",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.UserSearchResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.AccessResponse": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "types.AuthResponse": {
            "type": "object",
            "required": [
                "auth",
                "user"
            ],
            "properties": {
                "auth": {
                    "$ref": "#/definitions/types.AccessResponse"
                },
                "user": {
                    "$ref": "#/definitions/types.UserResponse"
                }
            }
        },
        "types.ConversationMessage": {
            "type": "object",
            "required": [
                "author",
                "content"
            ],
            "properties": {
                "author": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "types.ConversationMessageDTO": {
            "type": "object",
            "required": [
                "content",
                "relationship_id"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "relationship_id": {
                    "type": "integer"
                }
            }
        },
        "types.ConversationOpenDTO": {
            "type": "object",
            "required": [
                "relationship_id"
            ],
            "properties": {
                "relationship_id": {
                    "type": "integer"
                }
            }
        },
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.LoginDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.RegisterDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.RelationshipInviteDTO": {
            "type": "object",
            "required": [
                "to"
            ],
            "properties": {
                "to": {
                    "type": "integer"
                }
            }
        },
        "types.RelationshipResponse": {
            "type": "object",
            "required": [
                "friends",
                "incoming_requests",
                "outgoing_requests"
            ],
            "properties": {
                "friends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RelationshipResponseItem"
                    }
                },
                "incoming_requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RelationshipResponseItem"
                    }
                },
                "outgoing_requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RelationshipResponseItem"
                    }
                }
            }
        },
        "types.RelationshipResponseItem": {
            "type": "object",
            "required": [
                "id",
                "user_id",
                "username"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "last_message": {
                    "type": "string"
                },
                "online": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.SocketEvent": {
            "type": "object",
            "required": [
                "event"
            ],
            "properties": {
                "event": {
                    "type": "string"
                }
            }
        },
        "types.SocketResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "types.UserResponse": {
            "type": "object",
            "required": [
                "email",
                "id",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.UserSearchResponse": {
            "type": "object",
            "required": [
                "id",
                "username"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}